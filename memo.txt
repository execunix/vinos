##############################################################################
$ ./build.sh -U -x -r -n -m amd64 -j4 release
echo ===> build.sh command:    ./build.sh -U -x -r -n -m amd64 -j4 release
echo ===> build.sh started:    Thu Jan  7 21:12:47 KST 2016
echo ===> NetBSD version:      7.0
echo ===> MACHINE:             amd64
echo ===> MACHINE_ARCH:        x86_64
echo ===> Build platform:      Linux 3.13.0-74-generic x86_64
echo ===> HOST_SH:             /bin/sh
echo ===> Bootstrapping nbmake
cd /tmp/nbbuild9325
env CC=cc CPPFLAGS= CFLAGS=-O LDFLAGS= /bin/sh /mnt/hdd1/vinos/tools/make/configure
/bin/sh buildmake.sh
cd /mnt/hdd1/vinos
rm -f usr.bin/make/*.o usr.bin/make/lst.lib/*.o
echo ===> MAKECONF file:       $MAKECONF (File not found)
/tmp/nbbuild9325/nbmake -m /mnt/hdd1/vinos/share/mk obj NOSUBDIR=
cd tools
/tmp/nbbuild9325/nbmake -m /mnt/hdd1/vinos/share/mk obj NOSUBDIR=
cd /mnt/hdd1/vinos
echo ===> TOOLDIR path:        $TOOLDIR
echo ===> DESTDIR path:        $DESTDIR
echo ===> RELEASEDIR path:     $RELEASEDIR
echo ===> Removing $TOOLDIR
rm -r -f $TOOLDIR
echo ===> Removing $DESTDIR
rm -r -f $DESTDIR
mkdir -p $TOOLDIR/bin
rm -f $TOOLDIR/bin/nbmake
cp /tmp/nbbuild9325/nbmake $TOOLDIR/bin/nbmake
echo ===> Created $TOOLDIR/bin/nbmake
rm -f $TOOLDIR/bin/nbmake-amd64
cat <<EOF >$TOOLDIR/bin/nbmake-amd64
#! /bin/sh
# Set proper variables to allow easy "make" building of a NetBSD subtree.
# Generated from:  $NetBSD: build.sh,v 1.294.2.3 2014/11/14 14:58:27 martin Exp $
# with these arguments: -U -x -r -n -m amd64 -j4 release
#

BSHELL=/bin/sh; export BSHELL
BUILDSEED=NetBSD-7; export BUILDSEED
CONFIG_SHELL=/bin/sh; export CONFIG_SHELL
DESTDIR='$DESTDIR'; export DESTDIR
HOST_SH=/bin/sh; export HOST_SH
unset INFODIR
LC_ALL=C; export LC_ALL
unset LESSCHARSET
MACHINE=amd64; export MACHINE
MACHINE_ARCH='x86_64'; export MACHINE_ARCH
MAKEFLAGS='-de -m /mnt/hdd1/vinos/share/mk  MKOBJDIRS=yes'; export MAKEFLAGS
MAKEWRAPPERMACHINE=amd64; export MAKEWRAPPERMACHINE
MKARZERO=yes; export MKARZERO
MKUNPRIVED='$MKUNPRIVED'; export MKUNPRIVED
MKX11=yes; export MKX11
NETBSDSRCDIR=/mnt/hdd1/vinos; export NETBSDSRCDIR
RELEASEDIR='$RELEASEDIR'; export RELEASEDIR
unset TERMINFO
TOOLDIR='$TOOLDIR'; export TOOLDIR
USETOOLS=yes; export USETOOLS

exec "${TOOLDIR}/bin/nbmake" ${1+"$@"}
EOF
chmod +x $TOOLDIR/bin/nbmake-amd64
echo ===> Updated makewrapper: $TOOLDIR/bin/nbmake-amd64
$TOOLDIR/bin/nbmake-amd64 -j 4 release
echo ===> Successful make release
echo ===> build.sh ended:      Thu Jan  7 21:12:47 KST 2016
===> Summary of results:
	echo ===> build.sh command:    ./build.sh -U -x -r -n -m amd64 -j4 release
	echo ===> build.sh started:    Thu Jan  7 21:12:47 KST 2016
	echo ===> NetBSD version:      7.0
	echo ===> MACHINE:             amd64
	echo ===> MACHINE_ARCH:        x86_64
	echo ===> Build platform:      Linux 3.13.0-74-generic x86_64
	echo ===> HOST_SH:             /bin/sh
	echo ===> Bootstrapping nbmake
	echo ===> MAKECONF file:       $MAKECONF (File not found)
	echo ===> TOOLDIR path:        $TOOLDIR
	echo ===> DESTDIR path:        $DESTDIR
	echo ===> RELEASEDIR path:     $RELEASEDIR
	echo ===> Removing $TOOLDIR
	echo ===> Removing $DESTDIR
	echo ===> Created $TOOLDIR/bin/nbmake
	echo ===> Updated makewrapper: $TOOLDIR/bin/nbmake-amd64
	echo ===> Successful make release
	echo ===> build.sh ended:      Thu Jan  7 21:12:47 KST 2016
===> .
$ 

##############################################################################
$ env
MAKEWRAPPERMACHINE=amd64
NETBSDSRCDIR=/mnt/hdd1/vinos
RELEASEDIR=/mnt/hdd1/vinos/obj/releasedir
HOST_SH=/bin/bash
MAKEFLAGS=-de -m /mnt/hdd1/vinos/share/mk  MKOBJDIRS=yes
BSHELL=/bin/bash
DESTDIR=/mnt/hdd1/vinos/obj/destdir.amd64
VINOS_TOOL_PATH=/mnt/hdd1/vinos/tooldir/Linux-3.13.0-74-generic-x86_64/bin:
LC_ALL=C
TOOLDIR=/mnt/hdd1/vinos/tooldir/Linux-3.13.0-74-generic-x86_64
PATH=/mnt/hdd1/vinos/tooldir/Linux-3.13.0-74-generic-x86_64/bin:/usr/jdk1.6.0_45/bin:/usr/jdk1.6.0_45/jre/bin:/mnt/work/bin/arm-2013.05/bin:/mnt/work/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games
USETOOLS=yes
MKX11=yes
MACHINE=amd64
MKUNPRIVED=yes
CONFIG_SHELL=/bin/bash
MACHINE_ARCH=x86_64
MKARZERO=yes
MKUPDATE=yes
BUILDSEED=NetBSD-7
$

##############################################################################
root@xmtbsdv3:/mnt/hdd1/vinos# . bldenv.sh 

bash: Missing operation to perform.

Usage: bash [-EhnorUuxy] [-a arch] [-B buildid] [-C cdextras]
                [-D dest] [-j njob] [-M obj] [-m mach] [-N noisy]
                [-O obj] [-R release] [-S seed] [-T tools]
                [-V var=[value]] [-w wrapper] [-X x11src] [-Y extsrcsrc]
                [-Z var]
                operation [...]

 Build operations (all imply "obj" and "tools"):
    build               Run "make build".
    distribution        Run "make distribution" (includes DESTDIR/etc/ files).
    release             Run "make release" (includes kernels & distrib media).

 Other operations:
    help                Show this message and exit.
    makewrapper         Create nbmake-${MACHINE} wrapper and nbmake.
                        Always performed.
    cleandir            Run "make cleandir".  [Default unless -u is used]
    obj                 Run "make obj".  [Default unless -o is used]
    tools               Build and install tools.
    install=idir        Run "make installworld" to `idir' to install all sets
                        except `etc'.  Useful after "distribution" or "release"
    kernel=conf         Build kernel with config file `conf'
    kernel.gdb=conf     Build kernel (including netbsd.gdb) with config
    			file `conf'
    releasekernel=conf  Install kernel built by kernel=conf to RELEASEDIR.
    installmodules=idir Run "make installmodules" to `idir' to install all
                        kernel modules.
    modules             Build kernel modules.
    sets                Create binary sets in
                        RELEASEDIR/RELEASEMACHINEDIR/binary/sets.
                        DESTDIR should be populated beforehand.
    sourcesets          Create source sets in RELEASEDIR/source/sets.
    syspkgs             Create syspkgs in
                        RELEASEDIR/RELEASEMACHINEDIR/binary/syspkgs.
    iso-image           Create CD-ROM image in RELEASEDIR/images.
    iso-image-source    Create CD-ROM image with source in RELEASEDIR/images.
    live-image          Create bootable live image in
                        RELEASEDIR/RELEASEMACHINEDIR/installation/liveimage.
    install-image       Create bootable installation image in
                        RELEASEDIR/RELEASEMACHINEDIR/installation/installimage.
    disk-image=target	Creae bootable disk image in
			RELEASEDIR/RELEASEMACHINEDIR/binary/gzimg/target.img.gz.
    params              Display various make(1) parameters.
    list-arch           Display a list of valid MACHINE/MACHINE_ARCH values,
                        and exit.  The list may be narrowed by passing glob
                        patterns or exact values in MACHINE or MACHINE_ARCH.

 Options:
    -a arch        Set MACHINE_ARCH to arch.  [Default: deduced from MACHINE]
    -B buildid     Set BUILDID to buildid.
    -C cdextras    Append cdextras to CDEXTRA variable for inclusion on CD-ROM.
    -D dest        Set DESTDIR to dest.  [Default: destdir.MACHINE]
    -E             Set "expert" mode; disables various safety checks.
                   Should not be used without expert knowledge of the build system.
    -h             Print this help message.
    -j njob        Run up to njob jobs in parallel; see make(1) -j.
    -M obj         Set obj root directory to obj; sets MAKEOBJDIRPREFIX.
                   Unsets MAKEOBJDIR.
    -m mach        Set MACHINE to mach.  Some mach values are actually
                   aliases that set MACHINE/MACHINE_ARCH pairs.
                   [Default: deduced from the host system if the host
                   OS is NetBSD]
    -N noisy       Set the noisyness (MAKEVERBOSE) level of the build:
                       0   Minimal output ("quiet")
                       1   Describe what is occurring
                       2   Describe what is occurring and echo the actual command
                       3   Ignore the effect of the "@" prefix in make commands
                       4   Trace shell commands using the shell's -x flag
                   [Default: 2]
    -n             Show commands that would be executed, but do not execute them.
    -O obj         Set obj root directory to obj; sets a MAKEOBJDIR pattern.
                   Unsets MAKEOBJDIRPREFIX.
    -o             Set MKOBJDIRS=no; do not create objdirs at start of build.
    -R release     Set RELEASEDIR to release.  [Default: releasedir]
    -r             Remove contents of TOOLDIR and DESTDIR before building.
    -S seed        Set BUILDSEED to seed.  [Default: NetBSD-majorversion]
    -T tools       Set TOOLDIR to tools.  If unset, and TOOLDIR is not set in
                   the environment, nbmake will be (re)built
                   unconditionally.
    -U             Set MKUNPRIVED=yes; build without requiring root privileges,
                   install from an UNPRIVED build with proper file permissions.
    -u             Set MKUPDATE=yes; do not run "make cleandir" first.
                   Without this, everything is rebuilt, including the tools.
    -V var=[value] Set variable `var' to `value'.
    -w wrapper     Create nbmake script as wrapper.
                   [Default: ${TOOLDIR}/bin/nbmake-${MACHINE}]
    -X x11src      Set X11SRCDIR to x11src.  [Default: /usr/xsrc]
    -x             Set MKX11=yes; build X11 from X11SRCDIR
    -Y extsrcsrc   Set EXTSRCSRCDIR to extsrcsrc.  [Default: /usr/extsrc]
    -y             Set MKEXTSRC=yes; build extsrc from EXTSRCSRCDIR
    -Z var         Unset ("zap") variable `var'.

===> bash command:        bash -U -x -u -m amd64 -M ../tmp
===> bash started:        Sun Feb 28 05:25:51 KST 2016
===> NetBSD version:      7.0
===> MACHINE:             amd64
===> MACHINE_ARCH:        x86_64
===> Build platform:      NetBSD 7.0 amd64
===> HOST_SH:             /bin/bash
===> MAKECONF file:       /etc/mk.conf (File not found)
===> TOOLDIR path:        /mnt/hdd1/vinos/../tmp/mnt/hdd1/vinos/tooldir.NetBSD-7.0-amd64
===> DESTDIR path:        /mnt/hdd1/vinos/../tmp/mnt/hdd1/vinos/destdir.amd64
===> RELEASEDIR path:     /mnt/hdd1/vinos/../tmp/mnt/hdd1/vinos/releasedir
===> Updated makewrapper: /mnt/hdd1/vinos/../tmp/mnt/hdd1/vinos/tooldir.NetBSD-7.0-amd64/bin/nbmake-amd64
===> bash ended:          Sun Feb 28 05:25:53 KST 2016
===> Summary of results:
	 bash command:        bash -U -x -u -m amd64 -M ../tmp
	 bash started:        Sun Feb 28 05:25:51 KST 2016
	 NetBSD version:      7.0
	 MACHINE:             amd64
	 MACHINE_ARCH:        x86_64
	 Build platform:      NetBSD 7.0 amd64
	 HOST_SH:             /bin/bash
	 MAKECONF file:       /etc/mk.conf (File not found)
	 TOOLDIR path:        /mnt/hdd1/vinos/../tmp/mnt/hdd1/vinos/tooldir.NetBSD-7.0-amd64
	 DESTDIR path:        /mnt/hdd1/vinos/../tmp/mnt/hdd1/vinos/destdir.amd64
	 RELEASEDIR path:     /mnt/hdd1/vinos/../tmp/mnt/hdd1/vinos/releasedir
	 Updated makewrapper: /mnt/hdd1/vinos/../tmp/mnt/hdd1/vinos/tooldir.NetBSD-7.0-amd64/bin/nbmake-amd64
	 bash ended:          Sun Feb 28 05:25:53 KST 2016
===> .
PATH=/mnt/hdd1/vinos/../tmp/mnt/hdd1/vinos/tooldir.NetBSD-7.0-amd64/bin:/home/execunix/bin:/home/execunix/bin:/bin:/sbin:/usr/bin:/usr/sbin:/usr/X11R7/bin:/usr/X11R6/bin:/usr/pkg/bin:/usr/pkg/sbin:/usr/games:/usr/local/bin:/usr/local/sbin
nbmk=/mnt/hdd1/vinos/../tmp/mnt/hdd1/vinos/tooldir.NetBSD-7.0-amd64/bin/nbmake-amd64
root@xmtbsdv3:/mnt/hdd1/vinos#
root@xmtbsdv3:/mnt/hdd1/vinos#
root@xmtbsdv3:/mnt/hdd1/vinos# nbmake installworld
installsets ===> distrib/sets	(with: INSTALLDIR=/ INSTALLSETS=)
cd /mnt/hdd1/vinos/distrib/sets &&  DESTDIR=/mnt/hdd1/vinos/../tmp/mnt/hdd1/vinos/destdir.amd64  MACHINE=amd64  MACHINE_ARCH=x86_64  AWK=/mnt/hdd1/vinos/../tmp/mnt/hdd1/vinos/tooldir.NetBSD-7.0-amd64/bin/nbawk  CKSUM=/mnt/hdd1/vinos/../tmp/mnt/hdd1/vinos/tooldir.NetBSD-7.0-amd64/bin/nbcksum  DB=/mnt/hdd1/vinos/../tmp/mnt/hdd1/vinos/tooldir.NetBSD-7.0-amd64/bin/nbdb  HOST_SH=/bin/bash  MAKE=nbmake  MKTEMP=/mnt/hdd1/vinos/../tmp/mnt/hdd1/vinos/tooldir.NetBSD-7.0-amd64/bin/nbmktemp  MTREE=/mnt/hdd1/vinos/../tmp/mnt/hdd1/vinos/tooldir.NetBSD-7.0-amd64/bin/nbmtree  PAX=/mnt/hdd1/vinos/../tmp/mnt/hdd1/vinos/tooldir.NetBSD-7.0-amd64/bin/nbpax  COMPRESS_PROGRAM=gzip  GZIP=-n  PKG_CREATE=/mnt/hdd1/vinos/../tmp/mnt/hdd1/vinos/tooldir.NetBSD-7.0-amd64/bin/nbpkg_create  SED=/mnt/hdd1/vinos/../tmp/mnt/hdd1/vinos/tooldir.NetBSD-7.0-amd64/bin/nbsed  TSORT=/mnt/hdd1/vinos/../tmp/mnt/hdd1/vinos/tooldir.NetBSD-7.0-amd64/bin/nbtsort\ -q  /bin/bash ./maketars -d /mnt/hdd1/vinos/../tmp/mnt/hdd1/vinos/destdir.amd64   -M /mnt/hdd1/vinos/../tmp/mnt/hdd1/vinos/destdir.amd64/METALOG.sanitised -N /mnt/hdd1/vinos/etc  -L base,x -i / 
Copying set base
Copying set comp
Copying set games
Copying set man
Copying set misc
Copying set modules
Copying set text
Copying set xbase
Copying set xcomp
Copying set xfont
Copying set xserver
postinstall-check ===> .	(with: DESTDIR=)
   === Post installation checks ===
AWK=/mnt/hdd1/vinos/../tmp/mnt/hdd1/vinos/tooldir.NetBSD-7.0-amd64/bin/nbawk	 DB=/mnt/hdd1/vinos/../tmp/mnt/hdd1/vinos/tooldir.NetBSD-7.0-amd64/bin/nbdb	 HOST_SH=/bin/bash		 MAKE=nbmake			 PWD_MKDB=/mnt/hdd1/vinos/../tmp/mnt/hdd1/vinos/tooldir.NetBSD-7.0-amd64/bin/nbpwd_mkdb	 SED=/mnt/hdd1/vinos/../tmp/mnt/hdd1/vinos/tooldir.NetBSD-7.0-amd64/bin/nbsed		 STAT=/mnt/hdd1/vinos/../tmp/mnt/hdd1/vinos/tooldir.NetBSD-7.0-amd64/bin/nbstat /bin/bash /mnt/hdd1/vinos/usr.sbin/postinstall/postinstall  -m amd64 -a x86_64 -s /mnt/hdd1/vinos -x /mnt/hdd1/vinos/xsrc -d / check; if [ $? -gt 1 ]; then exit 1; fi
Source directory: /mnt/hdd1/vinos
Target directory: /
bluetooth check:
ddbonpanic check:
defaults check:
dhcpcd check:
dhcpcdrundir check:
envsys check:
fontconfig check:
gid check:
gpio check:
hosts check:
iscsi check:
makedev check:
motd check:
mtree check:
named check:
pam check:
periodic check:
pf check:
pwd_mkdb check:
rc check:
ssh check:
wscons check:
x11 check:
xkb check:
uid check:
varrwho check:
tcpdumpchroot check:
atf check:
	Can't find source directory for NetBSD.conf
	Can't find source directory for atf-run.hooks
catpages check:
manconf check:
ptyfsoldnodes check:
	Remove legacy device node /dev/ptyp0
	Remove legacy device node /dev/ptyp1
	Remove legacy device node /dev/ptyp2
	Remove legacy device node /dev/ptyp3
	Remove legacy device node /dev/ptyp4
	Remove legacy device node /dev/ptyp5
	Remove legacy device node /dev/ptyp6
	Remove legacy device node /dev/ptyp7
	Remove legacy device node /dev/ptyp8
	Remove legacy device node /dev/ptyp9
	Remove legacy device node /dev/ptypa
	Remove legacy device node /dev/ptypb
	Remove legacy device node /dev/ptypc
	Remove legacy device node /dev/ptypd
	Remove legacy device node /dev/ptype
	Remove legacy device node /dev/ptypf
	Remove legacy device node /dev/ttyp0
	Remove legacy device node /dev/ttyp1
	Remove legacy device node /dev/ttyp2
	Remove legacy device node /dev/ttyp3
	Remove legacy device node /dev/ttyp4
	Remove legacy device node /dev/ttyp5
	Remove legacy device node /dev/ttyp6
	Remove legacy device node /dev/ttyp7
	Remove legacy device node /dev/ttyp8
	Remove legacy device node /dev/ttyp9
	Remove legacy device node /dev/ttypa
	Remove legacy device node /dev/ttypb
	Remove legacy device node /dev/ttypc
	Remove legacy device node /dev/ttypd
	Remove legacy device node /dev/ttype
	Remove legacy device node /dev/ttypf
varshm check:
obsolete check:
postinstall checks passed: bluetooth ddbonpanic defaults dhcpcd dhcpcdrundir envsys fontconfig gid gpio hosts iscsi makedev motd mtree named pam periodic pf pwd_mkdb rc ssh wscons x11 xkb uid varrwho tcpdumpchroot catpages manconf varshm obsolete
postinstall checks failed: atf ptyfsoldnodes
To fix, run:
    /bin/bash /mnt/hdd1/vinos/usr.sbin/postinstall/postinstall -s /mnt/hdd1/vinos -d / fix atf ptyfsoldnodes
Note that this may overwrite local changes.
   ================================
make installworld started at:  Sun Feb 28 05:25:59 KST 2016
make installworld finished at: Sun Feb 28 05:38:23 KST 2016
root@xmtbsdv3:/mnt/hdd1/vinos# 


##############################################################################
# nbmake INSTALLWORLDDIR=/mnt/hdd1/root/ installworld

/mnt/hdd1/vinos/usr.sbin/sysinst
GPT_ENT_TYPE_*
compat_
